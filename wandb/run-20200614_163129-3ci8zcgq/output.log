['The', 'Old', 'Testament', 'of', 'the', 'King', 'James', 'Version', 'of', 'the', 'Bible<eos>The', 'First', 'Book', 'of', 'Moses:', 'Called', 'Genesis<eos>In', 'the', 'beginning', 'God', 'created', 'the', 'heaven', 'and', 'the', 'earth.<eos>And', 'the', 'earth', 'was', 'without', 'form,', 'and', 'void;', 'and', 'darkness', 'was', 'upon', 'the', 'face', 'of', 'the', 'deep.', 'And', 'the', 'Spirit', 'of', 'God', 'moved', 'upon', 'the', 'face', 'of', 'the<eos>waters.<eos>And', 'God', 'said,', 'Let', 'there', 'be', 'light:', 'and', 'there', 'was', 'light.']
{'the': 0, 'of': 1, 'and': 2, 'God': 3, 'was': 4, 'face': 5, 'there': 6, 'upon': 7, 'And': 8, 'Bible<eos>The': 9, 'Book': 10, 'Called': 11, 'First': 12, 'Genesis<eos>In': 13, 'James': 14, 'King': 15, 'Let': 16, 'Moses:': 17, 'Old': 18, 'Spirit': 19, 'Testament': 20, 'The': 21, 'Version': 22, 'be': 23, 'beginning': 24, 'created': 25, 'darkness': 26, 'deep.': 27, 'earth': 28, 'earth.<eos>And': 29, 'form,': 30, 'heaven': 31, 'light.': 32, 'light:': 33, 'moved': 34, 'said,': 35, 'the<eos>waters.<eos>And': 36, 'void;': 37, 'without': 38}
Vocabluary size: 39
==================================================
|                    Training                    |
==================================================
Epoch Size=  6
batch_idx: 0
inputs: tensor([[21, 22, 17,  0,  4,  4,  8,  0]])
outputs torch.Size([1, 8, 39])
predictions: torch.Size([8, 39])
labels torch.Size([8])
targets: torch.Size([1, 8])
batch_idx: 1
inputs: tensor([[18,  1, 11, 31, 38,  7,  0,  5]])
outputs torch.Size([1, 8, 39])
predictions: torch.Size([8, 39])
labels torch.Size([8])
targets: torch.Size([1, 8])
Percentage Done: 16.666667%    |  Perplexity:    38.76     |   Speed:   372.09 wps
batch_idx: 2
inputs: tensor([[20,  0, 13,  2, 30,  0, 19,  1]])
outputs torch.Size([1, 8, 39])
predictions: torch.Size([8, 39])
labels torch.Size([8])
targets: torch.Size([1, 8])
batch_idx: 3
inputs: tensor([[ 1,  9,  0,  0,  2,  5,  1, 36]])
outputs torch.Size([1, 8, 39])
predictions: torch.Size([8, 39])
labels torch.Size([8])
targets: torch.Size([1, 8])
batch_idx: 4
inputs: tensor([[ 0, 12, 24, 29, 37,  1,  3,  3]])
outputs torch.Size([1, 8, 39])
predictions: torch.Size([8, 39])
labels torch.Size([8])
targets: torch.Size([1, 8])
batch_idx: 5
inputs: tensor([[15, 10,  3,  0,  2,  0, 34, 35]])
outputs torch.Size([1, 8, 39])
predictions: torch.Size([8, 39])
labels torch.Size([8])
targets: torch.Size([1, 8])
Train perplexity at epoch 0:    37.99
Epoch Size=  6
Validation perplexity at epoch 0:    33.73
==================================================
|                    Testing                     |
==================================================
Epoch Size=  62
Traceback (most recent call last):
  File "main.py", line 198, in <module>
    test_ppl = run_epoch(model, test_data)
  File "main.py", line 101, in run_epoch
    loss = criterion(predictions, labels)    # loss = loss_function(predictions, labels)
  File "C:\Users\ltopuser\.conda\envs\master\lib\site-packages\torch\nn\modules\module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "C:\Users\ltopuser\.conda\envs\master\lib\site-packages\torch\nn\modules\loss.py", line 931, in forward
    return F.cross_entropy(input, target, weight=self.weight,
  File "C:\Users\ltopuser\.conda\envs\master\lib\site-packages\torch\nn\functional.py", line 2317, in cross_entropy
    return nll_loss(log_softmax(input, 1), target, weight, None, ignore_index, None, reduction)
  File "C:\Users\ltopuser\.conda\envs\master\lib\site-packages\torch\nn\functional.py", line 2111, in nll_loss
    if input.size(0) != target.size(0):
IndexError: dimension specified as 0 but tensor has no dimensions
